{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User Created Successfully"
          },
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Register User",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user password"
          },
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/update-password": {
      "post": {
        "operationId": "AuthController_updatePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user password"
          },
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/portfolio/*": {
      "get": {
        "operationId": "PortfolioController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Portfolio"
        ]
      },
      "post": {
        "operationId": "PortfolioController_post",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Portfolio"
        ]
      }
    },
    "/scribble/create-room": {
      "post": {
        "operationId": "ScribbleController_createRoom",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create a new room",
        "tags": [
          "Scribble"
        ]
      }
    },
    "/scribble/join-room": {
      "post": {
        "operationId": "ScribbleController_joinRoom",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinRoomDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room Joind successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinRoomResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Join a room",
        "tags": [
          "Scribble"
        ]
      }
    },
    "/api/v1/message": {
      "get": {
        "operationId": "MessagesController_listMessages",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Messages"
        ]
      },
      "post": {
        "operationId": "MessagesController_createMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Messages"
        ]
      }
    },
    "/api/v1/message/{id}": {
      "get": {
        "operationId": "MessagesController_getMessage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Messages"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_getUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/diary/events": {
      "get": {
        "operationId": "DiaryController_getTodaysEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Diary"
        ]
      }
    },
    "/diary/all-data": {
      "get": {
        "operationId": "DiaryController_getAllData",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Diary"
        ]
      }
    }
  },
  "info": {
    "title": "Vipul Waghmare APIs",
    "description": "All the APIs created",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@email.com"
          },
          "password": {
            "type": "string",
            "example": "password@1234"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "example": "field_name",
            "description": "Field that caused the error"
          },
          "message": {
            "type": "string",
            "example": "Field is required",
            "description": "Error message"
          }
        },
        "required": [
          "field",
          "message"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400,
            "description": "HTTP status code"
          },
          "error": {
            "type": "string",
            "example": "Bad Request",
            "description": "Error type"
          },
          "details": {
            "description": "List of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "required": [
          "statusCode",
          "error",
          "details"
        ]
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john.doe@email.com"
          },
          "password": {
            "type": "string",
            "example": "password@1234"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john.doe@email.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "token-received-in-mail"
          },
          "password": {
            "type": "string",
            "example": "new.password@1234"
          }
        },
        "required": [
          "token",
          "password"
        ]
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "example": "new.password@1234"
          },
          "password": {
            "type": "string",
            "example": "password@1234"
          }
        },
        "required": [
          "newPassword",
          "password"
        ]
      },
      "CreateRoomDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "John Doe"
          }
        },
        "required": [
          "username"
        ]
      },
      "CreateRoomResponseDto": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "roomId"
        ]
      },
      "JoinRoomDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "John Doe"
          },
          "roomId": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "username",
          "roomId"
        ]
      },
      "JoinRoomResponseDto": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "roomId"
        ]
      },
      "CreateMessageDto": {
        "type": "object",
        "properties": {}
      },
      "GetEventsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The ID of the event"
          },
          "title": {
            "type": "string",
            "example": "Doctor's Appointment",
            "description": "The title of the event"
          },
          "date": {
            "type": "string",
            "example": "2025-03-26",
            "description": "The date of the event"
          },
          "type": {
            "type": "string",
            "example": "appointment",
            "description": "The type of event"
          },
          "description": {
            "type": "string",
            "example": "Annual checkup at City Hospital",
            "description": "A brief description of the event"
          }
        },
        "required": [
          "id",
          "title",
          "date",
          "type",
          "description"
        ]
      },
      "GetEventsResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEventsResponseDto"
            }
          }
        },
        "required": [
          "events"
        ]
      }
    }
  }
}