---
import projects from "../data/projects";
import ProjectCard from "./ProjectCard.astro";
---

<section id="projects" class="projects">
  <div class="container">
    <div class="section-header">
      <h2>My Projects</h2>
      <div class="underline"></div>
    </div>
    <div class="project-filters">
      <button class="filter-btn active" data-filter="all">All</button>
      <button class="filter-btn" data-filter="frontend">Frontend</button>
      <button class="filter-btn" data-filter="fullstack">Full Stack</button>
      <button class="filter-btn" data-filter="backend">Backend</button>
    </div>
    <div class="projects-grid">
      {
        projects.map((project, idx) => (
          <ProjectCard project={project} idx={idx} />
        ))
      }
    </div>
  </div>
  <script type="module">
    // Filter logic only
    const filterBtns = document.querySelectorAll(".filter-btn");
    const projectCards = document.querySelectorAll(".project-card");
    filterBtns.forEach((btn) => {
      btn.addEventListener("click", () => {
        filterBtns.forEach((btn) => btn.classList.remove("active"));
        btn.classList.add("active");
        const filter = btn.getAttribute("data-filter");
        projectCards.forEach((card) => {
          if (
            filter === "all" ||
            card.getAttribute("data-category") === filter
          ) {
            card.style.display = "flex";
          } else {
            card.style.display = "none";
          }
        });
      });
    });
  </script>
  <script type="module">
    document.addEventListener("DOMContentLoaded", () => {
      const grid = document.querySelector(".projects-grid");
      if (!grid) return;

      grid.addEventListener("click", (e) => {
        const card = e.target.closest(".project-card");
        if (!card || !grid.contains(card)) return;

        // Prevent toggling if a link is clicked
        if (e.target.tagName === "A" || e.target.closest("a")) return;

        // Prevent toggling if clicking inside the accordion content
        const accordion = card.querySelector(".project-accordion");
        if (accordion && accordion.contains(e.target)) return;

        const chevron = card.querySelector(".chevron");
        const isOpen = card.getAttribute("data-open") === "true";

        if (isOpen) {
          card.setAttribute("data-open", "false");
          card.classList.remove("open");
          chevron.style.transform = "";
          accordion.style.maxHeight = "0";
          accordion.style.padding = "0 24px";
        } else {
          card.setAttribute("data-open", "true");
          card.classList.add("open");
          chevron.style.transform = "rotate(180deg)";
          accordion.style.maxHeight = "fit-content";
          accordion.style.padding = "20px 24px";
        }
      });

      // Optionally, initialize all cards as closed
      grid.querySelectorAll(".project-card").forEach((card) => {
        card.setAttribute("data-open", "false");
        card.classList.remove("open");
        const chevron = card.querySelector(".chevron");
        const accordion = card.querySelector(".project-accordion");
        if (chevron) chevron.style.transform = "";
        if (accordion) {
          accordion.style.maxHeight = "0";
          accordion.style.padding = "0 24px";
        }
      });
    });
  </script>
</section>
